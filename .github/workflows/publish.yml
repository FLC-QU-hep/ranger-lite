name: Build and Publish

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        pytorch-version: ["2.0.0", "2.4.0", "2.8.0"]
        exclude:
          - python-version: "3.13"
            pytorch-version: "2.0.0"
          - python-version: "3.12"
            pytorch-version: "2.0.0"
          - python-version: "3.11"
            pytorch-version: "2.0.0"
          - python-version: "3.13"
            pytorch-version: "2.4.0"

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies (PyTorch ${{ matrix.pytorch-version }})
        run: |
          python -m pip install --upgrade pip
          pip3 install torch==${{ matrix.pytorch-version }} --index-url https://download.pytorch.org/whl/cpu
          python -m pip install .
          pip install --group test

      - name: Test with PyTest
        run: |
          python -W "ignore:Failed to initialize NumPy:UserWarning" \
            -m pytest -v

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: python -m twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    permissions:
      id-token: write # Required for trusted publishing
    environment:
      name: publish
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
